name: Deploy to Dev and Prod

on:
  push:
    branches:
      - main
    paths:
      - "app/**"
      - ".github/workflows/deploy.yml"
  workflow_dispatch:
    inputs:
      deploy_to_prod:
        description: 'Deploy to Production'
        required: true
        type: boolean
        default: false

env:
  PROJECT_ID: talk-to-your-records
  REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev/talk-to-your-records/icliniq-search

jobs:
  build-deploy-dev:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
        with:
          args: >
            -Dsonar.projectKey=ai-chat-tes
            -Dsonar.sources=app/

      - name: secret-scanning
        uses: trufflesecurity/trufflehog@main

      - name: Store Service Account Credentials in JSON File
        env:
          GCP_SA_TALK_TO_YOUR_RECORDS: ${{ secrets.GCP_TALK_TO_YOUR_RECORDS }}
        run: |
          echo "$GCP_SA_TALK_TO_YOUR_RECORDS" > talk-to-your-records-1dd5074904a9.json

      - name: Store Anthropic API Key in TXT File
        env:
          ANTHROPIC_KEY: ${{ secrets.anthropic_api_key }}
        run: |
          echo "$ANTHROPIC_KEY" > anthropic_key.txt

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_TALK_TO_YOUR_RECORDS }}'

      - name: Get the commit SHA
        id: vars
        run: echo ::set-output name=sha::$(git rev-parse HEAD)

      - name: "Set up google cloud CLI"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build image
        run: |
          docker build . --file ./Dockerfile --tag ${{ env.GAR_LOCATION }}/icliniq-search:${{ steps.vars.outputs.sha }}

      - name: Push image
        run: docker push ${{ env.GAR_LOCATION }}/icliniq-search:${{ steps.vars.outputs.sha }}

      - name: Deploy to Cloud Run Dev
        run: |
          gcloud run deploy icliniq-search-dev \
            --image ${{ env.GAR_LOCATION }}/icliniq-search:${{ steps.vars.outputs.sha }} \
            --port 8090 \
            --memory 2Gi \
            --region ${{ env.REGION }} \
            --platform managed

  deploy-prod:
    needs: build-deploy-dev
    if: github.event.inputs.deploy_to_prod == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_TALK_TO_YOUR_RECORDS }}'

      - name: Get the commit SHA
        id: vars
        run: echo ::set-output name=sha::$(git rev-parse HEAD)

      - name: "Set up google cloud CLI"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Deploy to Cloud Run Prod
        run: |
          gcloud run deploy icliniq-search \
            --image ${{ env.GAR_LOCATION }}/icliniq-search:${{ steps.vars.outputs.sha }} \
            --port 8090 \
            --memory 2Gi \
            --region ${{ env.REGION }} \
            --platform managed